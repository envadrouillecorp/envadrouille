var currentGallery = null;
function jGalleryViewer(imgs) {
   var self = this;
   var currentUid = 0;
   var tmpl = '<div><div id="cbox${id}" class="block" style="left:${left}"><table style="width:100%;height:100%;vertical-align:middle;text-align:center;border-collapse:collapse;"><tr><td><img src="" draggable="false"><div id="cboxComment"></div></td></tr></table></div></div>';
   var picRegex = new RegExp(jGalleryModel.picsDir+'(.*)\\.([^\\.]+)$');
   var thumbReplace = jGalleryModel.cacheDir+"/thumbs/$1_r.$2";
   var index = 0,
      mainDiv = $("#fullscreenDiv"),
      contentDiv = $("#fullscreenDiv #content"),
      currentImg = imgs[0],
      isFullscreen = false,
      hasMoved = false, // we have dragged the slide
      isSlide = false,  // we drag horizontally (next/prev slide)
      isClose = false;  // or vertically (close), but not both
   var startX = 0,      // cursor position at start of drag
      startY = 0,
      dX = 0,
      dY = 0,
      maxWidth = 0,
      maxHeight = 0,
      vw = 0;
   var isLoaded = {};
   mainDiv.removeClass('fullscreen');

   /* Change the src of current, prev or next. Complex because of exif orientation tweaks. */
   function loadImg(div, index) {
      var img = imgs[index];
      var href = img.attr('href');
      if(!isFullscreen)
         href = href.replace(picRegex, thumbReplace);
      if(div.find('img').attr('src', href) == href)
         return;

      // Avoid weird rendering bugs... when the new image is not loaded, browsers display the old image instead, this causes unpleasant effect
      // where images switch in the middle of transitions for no reason or are displayed twice
      // when the image is already loaded, clearing the src creates an unpleasant flickering effect, so avoid doing it
      if(!isLoaded[index])
         div.find('img').attr('src', '');

      div.find('img').attr('src', href).load(function() {
         isLoaded[index] = true;
         if(div.find('img').attr('src') != href)
            return;
         var angle = 0;
         if($(this).exifLoad) {
            $(this).exifLoad(function(photo) {
               var orientation = $(photo).exif("Orientation");
               if(orientation == 3) {
                  angle = 180;
               } else if(orientation == 6) {
                  angle = 90;
               } else if(orientation == 8) {
                  angle = 270;
               }
					$(photo).css({'transform':'rotate('+angle+'deg)', '-ms-transform':'rotate('+angle+'deg)', '-webkit-transform':'rotate('+angle+'deg)'});
               var ratio = 0.80;
               if(isFullscreen)
                  ratio = 1;
               if(angle == 90 || angle == 270) {
                  $(photo).css({'maxWidth':Math.floor(ratio*$(window).height()), 'maxHeight':Math.floor(ratio*$(window).width())});
               } else {
                  $(photo).css({'maxWidth':Math.floor(ratio*100)+'vw', 'maxHeight':Math.floor(ratio*100)+'vh'});
               }
            });
         } else {
            $(this).css({'transform':'rotate('+angle+'deg)', '-ms-transform':'rotate('+angle+'deg)', '-webkit-transform':'rotate('+angle+'deg)'});
            if(isFullscreen)
               $(this).css({'maxWidth':'100vw', 'maxHeight':'100vh'});
            else
               $(this).css({'maxWidth':'80vw', 'maxHeight':'80vh'});
         }
      });

      var commentDiv = div.find('#cboxComment');
      commentDiv.html('Image '+ (index + 1) + '/' + imgs.length);
      if(img.attr('title'))
         commentDiv.append(' - '+img.attr('title'));
   }

   /* Refresh the view */
   function updateImgs() {
      currentImg = imgs[(index + 1) % imgs.length];
      $("#cboxShowOriginal").parent().attr('href', currentImg.attr('href'));

      loadImg($('#fullscreenDiv #cbox'+(currentUid)), (index + 1) % imgs.length);
      loadImg($('#fullscreenDiv #cbox'+(currentUid+1)), (index + 2) % imgs.length);
      loadImg($('#fullscreenDiv #cbox'+(currentUid-1)), index);

      if(window.history && window.history.replaceState) {
         history.replaceState('', '', window.location.hash.replace(/(.+)#[^#]+/, '$1')+'#'+currentImg.attr('href').replace(/^.*\/([^\/]+)$/, '$1'));
      }
   }

   /* When the animation to switch to prev/next is complete, we change pictures so that next becomes current, etc. */
   function switchImgs(dir) {
      if(dir == "left") {
         if(--index < 0) index = imgs.length - 1;

         $('#fullscreenDiv #cbox'+(currentUid+1)).remove();
         currentUid--;
         contentDiv.prepend($.tmpl(tmpl, {id:currentUid-1, left:((currentUid-1)*100)+'vw'}).html());
      } else if(dir == "right") {
         index = (index + 1) % imgs.length;

         $('#fullscreenDiv #cbox'+(currentUid-1)).remove();
         currentUid++;
         contentDiv.append($.tmpl(tmpl, {id:currentUid+1, left:((currentUid+1)*100)+'vw'}).html());
      }
      loadImg($('#fullscreenDiv #cbox'+(currentUid)), (index + 1) % imgs.length);
      contentDiv.removeClass('animate');
      updateImgs();
   }

   /* Add buttons actions */
   function restoreDrag() {
      hasMoved = false;
      isSlide = false;
      isClose = false;

      mainDiv.mousedown(startDrag);
      mainDiv.get(0).addEventListener('touchstart', startDrag, false);

      $(document).unbind('keydown').keydown(function(e) {
         if(e.keyCode == 37 || e.keyCode == 39) {
            removeDrag();
            maxWidth = $(window).width();
            maxHeight = $(window).height();
         }
         if(e.keyCode == 37) {
            e.preventDefault();
            finishAnimation("left", true);
         } else if(e.keyCode == 39) {
            e.preventDefault();
            removeDrag();
            finishAnimation("right", true);
         } else if(e.keyCode === 27) { // esc
            self.close();
         }
      });
   }

   /* Remove button actions (during animations) */
   function removeDrag() {
      mainDiv.unbind();
      $(document).unbind('mousemove');
      $(document).unbind('mouseup');

      mainDiv.get(0).removeEventListener('touchstart', startDrag, false);
      document.removeEventListener('touchmove', onTouchMove, false);
      document.removeEventListener('touchend', endDrag, false);

      $(document).unbind('keydown');
   }

   function notAClick() {
      return $('#cboxFullScreen:hover').length == 0
         && $('#cboxShowOriginal:hover').length == 0
         && $('#cboxNext:hover').length == 0
         && $('#cboxPrev:hover').length == 0
         && $('#cboxClose:hover').length == 0
         && $('#fullscreenDiv:hover').length != 0
   }

   /* We finished dragging, where should the image go? What should we do? */
   function endDrag(e) {
      removeDrag();

      if(isSlide) { // finish sliding
         if(dX < -maxWidth/5) {
            finishAnimation("right");
         } else if(dX > maxWidth/5) {
            finishAnimation("left");
         } else {
            finishAnimation("center");
         }
      } else if(isClose) { // finish closing
         if(Math.abs(dY) > maxHeight/5) {
            $('#fullscreenDiv #cbox'+(currentUid)).stop().animate({opacity:0}, "fast", function() { self.close() });
         } else {
            $('#fullscreenDiv #cbox'+(currentUid)).stop().animate({opacity:1}, "fast", function() { restoreDrag() });
         }
      } else { // or do nothing
         restoreDrag();
         if(notAClick())
            self.close();
      }
   }

   /* On start drag, we simply register handlers and set up the startX/Y */
   function startDrag(e) {
      if(e.touches && e.touches[0]) {
         startX = e.touches[0].pageX;
         startY = e.touches[0].pageY;
      } else {
         startX = e.pageX;
         startY = e.pageY;
      }
      dX = 0,
      dY = 0;
      maxWidth = $(window).width();
      maxHeight = $(window).height();
      vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);


      removeDrag();

      $(document).mouseup(endDrag);
      document.addEventListener('touchend', endDrag, false);

      $(document).mousemove(onTouchMove);
      document.addEventListener('touchmove', onTouchMove, {passive: false});
   }

   function onTouchMove(e) {
      if(e.touches && e.touches.length >= 2)
         return;
      if(window.visualViewport && window.visualViewport.scale > 1)
         return;
      e.preventDefault();
      if(e.touches && e.touches[0]) {
         dX = e.touches[0].pageX - startX;
         dY = e.touches[0].pageY - startY;
      } else {
         dX = e.pageX - startX;
         dY = e.pageY - startY;
      }
      move(dX, dY);
   }

   function move(dX, dY) {
      if((Math.abs(dX) > 30 || hasMoved) && !isClose) { // we moved horizontally and not previously vertically
         var offset = -currentUid*vw;
         isSlide = true;
         hasMoved = true;
         contentDiv.css('transform', 'translate3d(' + (offset + dX) + 'px,0,0)');
      } else if((Math.abs(dY) > 50 || hasMoved) && !isSlide) { // we moved vertically and not previously horizontally
         isClose = true;
         hasMoved = true;
         var ratio = ($(window).height() - Math.abs(dY)) / $(window).height();
         if(ratio < 0.1)
            ratio = 0.1;
         $('#fullscreenDiv #cbox'+(currentUid)).css('opacity', ratio);
      }
   }

   function finishAnimation(dir, fast, cb) {
      var offset = -currentUid;
      if(dir == "left")
         offset = -(currentUid-1);
      else if(dir == "right")
         offset = -(currentUid+1);

      function end() {
         if(dir != "center")
            switchImgs(dir);
         restoreDrag();
         if(cb)
            cb();
      }

      var transformMatrix = contentDiv.css('transform');
      var matrix = transformMatrix.replace(/[^0-9\-.,]/g, '').split(',');
      var x = matrix[12] || matrix[4];//translate x
      if(x != offset) { // transitionend is not fired when the div is already in place... so only animate when necessary
         if(!fast)
            contentDiv.removeClass('animate').one("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", function(){ end() }).addClass('animate');
         contentDiv.css('transform', 'translate3d(' + (offset * 100) + 'vw,0,0)');
         if(fast)
            end();
      } else {
         end();
      }
   }

   self.close = function() {
      currentGallery = null;
      removeDrag();
      if(window.history && window.history.replaceState) {
         history.replaceState('', '', window.location.hash.replace(/(.+)#[^#]+/, '$1'));
      }
      mainDiv.css('display', 'none');
   }

   self.fullscreen = function() {
      isFullscreen = !isFullscreen;
      if(isFullscreen)
         mainDiv.removeClass('fullscreen').addClass('fullscreen');
      else
         mainDiv.removeClass('fullscreen');
      updateImgs();
   }

   self.show = function(img) {
      currentUid = 0;
      currentGallery = self;
      contentDiv.removeClass('animate').css('transform', '');
      contentDiv.html(
            $.tmpl(tmpl, {id:currentUid-1, left:'-100vw'}).html()
            + $.tmpl(tmpl, {id:currentUid, left:'0'}).html()
            + $.tmpl(tmpl, {id:currentUid+1, left:'100vw'}).html()
      );

      hasMoved = false;
      isSlide = false;
      isClose = false;
      startX = 0;
      startY = 0;
      dX = 0;
      dY = 0;

      index = 0;
      if(img) {
         index = imgs.findIndex(function(e) { return e.attr('href') == img.attr('href') }) - 1;
         if(index < 0)
            index = imgs.length - 1;
      }

      /* We register the handlers for next/prev here because otherwise they are removed when doing a mousedown on the canvas */
      /* (Dragging = mousedown, removed all handlers, and so cancel the click = mouseup...) */
      function oneClick(div, f) {
         div.unbind('click');
         removeDrag();
         f(function() {
            div.click(function() { oneClick(div, f); });
         });
      }
      $('#cboxNext').unbind('click').click(function() { oneClick($(this), function(cb) { finishAnimation("right", true, cb) }); return false; });
      $('#cboxPrev').unbind('click').click(function() { oneClick($(this), function(cb) { finishAnimation("left", true, cb) }); return false;});
      $('#cboxClose').unbind('click').click(function() { self.close(); return false;});

      $('#cboxFullScreen').unbind('click').click(function() { self.fullscreen(); return false; });
      $('#cboxFullScreen').unbind('hover').hover(function() { $(this).css('opacity', 1) }, function() { $(this).css('opacity', '') });
      $('#cboxShowOriginal').unbind('hover').hover(function() { $(this).css('opacity', 1) }, function() { $(this).css('opacity', '') });
      $('#cboxShowOriginal').unbind('click').click(function() {
            location.href = currentImg.attr('href');
      });

      removeDrag();
      restoreDrag();

      updateImgs();
      mainDiv.css('display', 'block');
   }
};
function colorbox($, window) {
   $("body").append('<div id="fullscreenDiv" style="display:none;z-index:9000"><div id="content" style="left: 0px;"></div><div id="cboxControls"><span id="cboxFullScreen"></span><a href="#" style="display:inline-block"><span id="cboxShowOriginal"></span></a></div><div id="cboxPrev" style="float: left; display: block;">previous</div><div id="cboxNext" style="float: left; display: block;">next</div><div id="cboxClose" style="float: left; display: block;">close</div>');

   var colorB = $.fn['colorbox'] = $['colorbox'] = function (options, callback) {
      var self = this;
      var imgsSrc = [];
      self.each(function () {
            imgsSrc.push($(this));
      });
      var c = new jGalleryViewer(imgsSrc);
      self.each(function () {
         $(this).click(function(e) {
            e.preventDefault();
            c.show($(this));
         });
      });
      return self;
   };
   colorB.close = function() {
      if(currentGallery)
         currentGallery.close();
   }
}
$script.ready(['jquery'], function() {
   $script('./scripts/jquery.exif.js', 'exif-orientation');
});
